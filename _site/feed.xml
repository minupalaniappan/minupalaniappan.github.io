<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MSP</title>
    <description>I am a second year student at the University of the California, Davis pursuing a double major in Design and Computer Science.
</description>
    <link>http://minupalaniappan.com/</link>
    <atom:link href="http://minupalaniappan.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 16 Jun 2016 00:41:02 -0700</pubDate>
    <lastBuildDate>Thu, 16 Jun 2016 00:41:02 -0700</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Adapting Twilio and Wolfram Alpha to produce a robust solving solution</title>
        <description>&lt;p&gt;Wolfio is an SMS tool that allows you to solve any mathematics-based question.&lt;/p&gt;

&lt;h3 id=&quot;source&quot;&gt;Source&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupalaniappan/Wolfio&quot;&gt;Github code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://devpost.com/software/wolfio&quot;&gt;Devpost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-did-the-project-start&quot;&gt;How did the project start?&lt;/h3&gt;
&lt;p&gt;Well, the idea for Wolfio was concieved at HackingEDU: a 36 hour programming competition in the heart of San Mateo, CA. I had just wrapped up my last quarter of math; it was on linear algebra so naturally I evolved into a Wolfram Alpha power-user during that time.&lt;/p&gt;

&lt;p&gt;I loved Wolfram, so I thought about ways of extending its powerful symbolic interpreter. I realized that the best way to extend the technology was through MMS and SMS; after all, all mobile devices have the ability to send and view MMS/SMS messages.&lt;/p&gt;

&lt;p&gt;I told my friend Matt about the idea, and he was ready to tackle it with me at HackingEDU.&lt;/p&gt;

&lt;h3 id=&quot;the-development-proccess&quot;&gt;The development proccess&lt;/h3&gt;

&lt;p&gt;The technology stack was fairly simple. I whipped up a Flask project that came standard with routing. I then integrated Twilio’s Python service so that it could interact with Flask GET params. This is how we were going to fetch inputs and serve the output (solution).&lt;/p&gt;

&lt;p&gt;All inputs would be recieved at the root route like so…&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;GET&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;POST&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;from_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;From&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;Body&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;twilio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;twiml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Answer: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retrieveTokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We fetch the content, which in this case is &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;. We then bundle it in the Twilio &lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt; and throw it in &lt;code class=&quot;highlighter-rouge&quot;&gt;retrieveTokens()&lt;/code&gt;. This function was the blackbox that would essentially tokenize the query and send it over to custom written Wolfram APIs.&lt;/p&gt;

&lt;p&gt;The string manipulation was fairly intensive. Just think about it; we are building a calculator that doesn’t just solve basic addition and subtraction. We are building a comprehensive tool that solves multivariable calculus and complex alegbra. Developing an intuitive notation for users proved to be a tremendous challenge.&lt;/p&gt;

&lt;p&gt;The string manipulation was half the battle; the other half of this fight was in building the Wolfram APIs. Matt seemed to pick up their Wolfram’s function builder pretty quickly, so our teamwork really kicked in halfway through the hackathon.&lt;/p&gt;

&lt;p&gt;So, lets assume that we now have all the tokens neccesary to solve a math problem. We now need to route these tokens to the right Wolfram API.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&#39;functionName&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;DERfunction&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&#39;parameterNames&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;q&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;withRespect&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;nth&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Here, given these three tokens, we route it to the &lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;DERfunction&#39;&lt;/code&gt; in our bank of Wolfram APIs. It is done like so…&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;executeMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;baseURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;...&#39;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;functionName&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;URLsuffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;functionName&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;?q=&#39;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;URLsuffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pvalue&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;parameterNames&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;URLsuffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;&amp;amp;&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;URLsuffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;=&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quote_plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pvalue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;baseURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URLsuffix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;URLsuffix&lt;/code&gt; is our concanetated GET string that is then manipulated by the specific Wolfram function. We then fetch the URL repsonses using &lt;code class=&quot;highlighter-rouge&quot;&gt;urllib2.urlopen&lt;/code&gt; and iterate the given output in a pretty print.&lt;/p&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;
&lt;p&gt;The application worked like a charm and it what was even more impressive was that it was compatible with standard flip phones. We want to optimize this tool so that it can interpret more queries and answer more complex questions. Below are images of the hack working on Matt’s flip phone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://minupalaniappan.com/assets/wolfio/wolfio1.jpg&quot; alt=&quot;img&quot; /&gt;
&lt;img src=&quot;http://minupalaniappan.com/assets/wolfio/wolfio2.jpg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/projects/2016/05/29/wolfio.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/projects/2016/05/29/wolfio.html</guid>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>How Android&#39;s SDK and Flash allowed me to gamify CK12&#39;s edu content</title>
        <description>&lt;p&gt;At the end of my senior year of High school, I interned at CK-12; my task was to take their educational content and bake it into an Android application. I chose to gamify it.&lt;/p&gt;

&lt;h3 id=&quot;source&quot;&gt;Source&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupalaniappan/CK12QuizPro&quot;&gt;Github code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;authentication&quot;&gt;Authentication&lt;/h3&gt;

&lt;p&gt;Many of the function calls I make require direct queries to CK-12’s database. In addition, since this is a game, I want to record a user’s scores, performance and test-taking times. The core of this application requires a url builder like so…&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//  System.out.println(&quot;Requeted URL:&quot; + myURL);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;URLConnection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlConn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;InputStreamReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        	&lt;span class=&quot;n&quot;&gt;CookieManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CookieManager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        	 &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;urlConn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myCookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;auth-astro = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;urlConn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRequestProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cookie&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myCookie&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;urlConn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;storeCookies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCookies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Above, I am setting up the cookie for a specific user and opening a line of authentication so that the user can make requests back and forth from the database.&lt;/p&gt;

&lt;p&gt;Additionally, I also had to work with KeyValue pairs in order to properly authenticate each user.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;urlParameters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BasicNameValuePair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;login&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;urlParameters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BasicNameValuePair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;token&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;urlParameters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BasicNameValuePair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;authType&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;gaming&quot;&gt;Gaming&lt;/h3&gt;

&lt;p&gt;So, once the user has been authenticated, we need to allow them to start taking quizzes. Building the workflow for each quiz was straightforward.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We begin the quiz state like so…&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;WebSettings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webSettings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mainDisplay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;webSettings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setJavaScriptEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mainDisplay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addJavascriptInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TESTUI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Android&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;mainDisplay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loadData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HTMLasString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TESTUI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;truefalse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;questionData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;questionData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;questionData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;&quot;text/html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here, we are fetching a set of questions. Each question is boxed into 3 attributes, and that is why you see the &lt;code class=&quot;highlighter-rouge&quot;&gt;questionData.get()&lt;/code&gt; run 3 times.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We begin the stopwatch.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;We record correct and incorrect answers.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnedResult&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;response&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;crt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;correctAnswer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAsString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userInput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTextColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#A6E3A6&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\u2713&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;correct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We fetch the string and set it to &lt;code class=&quot;highlighter-rouge&quot;&gt;crt&lt;/code&gt;. After this, we compare it to the &lt;code class=&quot;highlighter-rouge&quot;&gt;userInput&lt;/code&gt;. If the condition is met, we increment the &lt;code class=&quot;highlighter-rouge&quot;&gt;correct&lt;/code&gt; count and produce a green checkmark (&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;\u2713&quot;&lt;/code&gt;).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;At the end, we compile a performance report, and write it to the profile.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getIntent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExtras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENCODEDID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TITLE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DURATION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DURATION&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TOTALQUESTION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TOTALQUESTION&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SCORE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SKIPPED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SKIPPED&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WRONG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WRONG&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submissions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStringArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SUBMISSIONS&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Many of the components written for each view are passed through what are called Bundles. Essentially, you can bundle sets of meta data and tie it to objects of type &lt;code class=&quot;highlighter-rouge&quot;&gt;Bundle&lt;/code&gt;. That is what &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; is here. I simply unwrap the bundle when I want to retrieve the quiz performance. This can be done with &lt;code class=&quot;highlighter-rouge&quot;&gt;getString()&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;project-timeline&quot;&gt;Project timeline&lt;/h3&gt;

&lt;p&gt;This application was fairly comprehensive and was a proof-of-concept for many of CK-12’s mobile games. It was especially important, because it was developed by a student; at CK-12, the student perspective was valued and foundational to many of the tools that were built.&lt;/p&gt;

</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/projects/2016/05/29/quizpro.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/projects/2016/05/29/quizpro.html</guid>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>The many iterations of my own website</title>
        <description>&lt;h3 id=&quot;source&quot;&gt;Source&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupalaniappan/2014&quot;&gt;2014 Website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupalaniappan/minupalaniappan.github.io/tree/c287921e2de873601ba7e581d942b6ea6412b93e&quot;&gt;2015 Website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupalaniappan/minupalaniappan.github.io&quot;&gt;2016 Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;2014&lt;/h3&gt;

&lt;p&gt;2014 was a good year. I had just graduated from high school and wanted to get into some web dev. So it made sense to first build a personal website. CSS was really straightforward, but plugging in the JS that would power the animations and scrolling was a bit tough.&lt;/p&gt;

&lt;p&gt;Here was the &lt;a href=&quot;http://www.minupalaniappan.com/2014&quot;&gt;2014&lt;/a&gt; version I had built.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://minupalaniappan.com/assets/website/2014.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2015&lt;/h3&gt;

&lt;p&gt;This website was inspired by all the bland &amp;amp; gray sites that only valued beautiful typefaces. This build included Foundation.css and the Proxima Nova Font Face (btw, its a great font!). I added some custom CSS to make the tabs look a little better. Other than that, it was designed kind of like a broken up resume and read very well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://minupalaniappan.com/assets/website/2015.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;2016&lt;/h3&gt;

&lt;p&gt;I’m trying something different this year. I wanted to experiment with Jekyll and static blogware. So, whatever your seeing now is the 2016 production version.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/projects/2016/05/29/personalwebsite.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/projects/2016/05/29/personalwebsite.html</guid>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Using AngularFire to build a notes analyzer</title>
        <description>&lt;p&gt;hi there&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/projects/2016/05/29/noteme.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/projects/2016/05/29/noteme.html</guid>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Scaling Django to build an awesome search engine</title>
        <description>&lt;p&gt;Migo is a search engine that lets you find philanthropy events near you&lt;/p&gt;

&lt;h3 id=&quot;source&quot;&gt;Source&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupalaniappan/migo&quot;&gt;Github code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-it-got-started&quot;&gt;How it got started&lt;/h3&gt;

&lt;p&gt;Migo was a hack I wrote for Bronco Hack, the official Santa Clara University Hackathon. At the time of the hackathon, I was playing around with Django and wanted to implement the framework in a 24 hour period. This hackathon was the perfect time play around with it.&lt;/p&gt;

&lt;h3 id=&quot;the-development-proccess&quot;&gt;The development proccess&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Routing
Django, like most python frameworks, allows you to route your params to a function. In Django, GET params are routed like so…&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&#39;^search/(?P&amp;lt;searchterm&amp;gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;W]+)/1/(?P&amp;lt;page&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;migoapp.views.spec&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&#39;^search/(?P&amp;lt;searchterm&amp;gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w|&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;W]+)/(?P&amp;lt;startyear&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(?P&amp;lt;startmonth&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)-(?P&amp;lt;startday&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)/(?P&amp;lt;endyear&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(?P&amp;lt;endmonth&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)-(?P&amp;lt;endday&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)/2/(?P&amp;lt;page&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+)/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&#39;migoapp.views.spec2&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These are two different routes; one takes &lt;code class=&quot;highlighter-rouge&quot;&gt;searchterm&lt;/code&gt; and fetches the specific &lt;code class=&quot;highlighter-rouge&quot;&gt;page&lt;/code&gt; in the list of results.
The nex route is a little more specific; this time, it takes &lt;code class=&quot;highlighter-rouge&quot;&gt;startday&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;startyear&lt;/code&gt;, 	&lt;code class=&quot;highlighter-rouge&quot;&gt;startmonth&lt;/code&gt; and the respect end variables.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API Calls&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;spec2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchterm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startyear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startmonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;startday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endyear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endmonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endday&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;city&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchterm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  	&lt;span class=&quot;n&quot;&gt;tempurl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;http://127.0.0.1:8000/search/&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchterm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;/&#39;&lt;/span&gt;
  	&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;https://www.eventbriteapi.com/v3/events/search/?&#39;&lt;/span&gt;
  	&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;token=4FDXOHJM6UTWIHWH76TA&amp;amp;format=json&amp;amp;q=volunteer&amp;amp;venue.city=&#39;&lt;/span&gt;
  	&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;city&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;&amp;amp;start_date.range_start=&#39;&lt;/span&gt;
  	&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startyear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;-&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startmonth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;-&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;T00:00:00Z&#39;&lt;/span&gt;
  	&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;&amp;amp;start_date.range_end=&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endyear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;-&#39;&lt;/span&gt;
  	&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endmonth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;-&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endday&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;T00:00:00Z&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;&amp;amp;page=&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  	&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Once these functions were properly routed, we would like to call the proper APIs. As you can see, our data source of choice was Eventbrite.
* Front-end&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/projects/2016/05/29/migo.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/projects/2016/05/29/migo.html</guid>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Using NodeJS to build the ultimate lyric tool</title>
        <description>&lt;p&gt;Migo is a search engine that lets you find philanthropy events near you&lt;/p&gt;

&lt;h3 id=&quot;source&quot;&gt;Source&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupalaniappan/migo&quot;&gt;Github code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/projects/2016/05/29/drakify.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/projects/2016/05/29/drakify.html</guid>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Developing on iOS to build a patient logger</title>
        <description>&lt;p&gt;hi there&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/projects/2016/05/29/doctorly.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/projects/2016/05/29/doctorly.html</guid>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>Me at xiq.io</title>
        <description>&lt;p&gt;hi there&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/work/2016/05/29/xiq.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/work/2016/05/29/xiq.html</guid>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Working with OpenCV to build ShapeLanguage</title>
        <description>&lt;p&gt;hi there&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/projects/2016/05/29/shapeLanguage.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/projects/2016/05/29/shapeLanguage.html</guid>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>My first big adventure into social networking</title>
        <description>&lt;p&gt;This is a story about a failed attempt at building a network to discover micro-communities. Dojo was the first underground ecosystem that empowered powerful opinions, unadulterated content and free thought.&lt;/p&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=uqW92ejxgDM&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/uqW92ejxgDM/0.jpg&quot; alt=&quot;IMAGE ALT TEXT HERE&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;source&quot;&gt;Source&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mikezucc/dojo-app&quot;&gt;iOS code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mikezucc/dojo-site-api&quot;&gt;API code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupal/dojowebv1&quot;&gt;Web code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/minupal/dojowebv2&quot;&gt;Web cont. code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conception&quot;&gt;Conception&lt;/h3&gt;
&lt;p&gt;The idea was conceptualized June 2014 by Michael and me after my high school graduation. The platform allowed creators to post images, videos, links and texts to groups housing like-minded individuals. These groups were dubbed “Dojos” and recommended them based on your location. It was now effortless to find virtual homes around the world.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://minupalaniappan.com/assets/dojo/dojo1.jpeg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ideation&quot;&gt;Ideation&lt;/h3&gt;
&lt;p&gt;Development wasn’t easy. We slaved away designing 10 iterations of a UI, writing endless lines of Obj-C, Python, JS in order to finally complete a shippable product. One of our biggest problems was bypassing the hundreds of patents tech heavyweights such as Snapchat and Facebook placed on their newsfeed layouts and camera modules. In hindsight, working around these patents made the development process a bit more adventurous. After 40k lines of code written and 9k commits to Github, the app was ready to be shipped. Version 1.0 was just 3 screens: a page to manage private, public and nearby Dojos, a detail view for pictures and videos, and a unique camera that leveraged slide to detect video and photo. Our priority list was simple: build functional UI, not pretty UI— the camera represented this mission well. To us, the tech that we built was the jungle that users could set to flames with eyebrow-raising content &lt;strong&gt;(the kindling)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://minupalaniappan.com/assets/dojo/dojo2.jpeg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;launch&quot;&gt;Launch&lt;/h3&gt;
&lt;p&gt;We launched at UC Davis in early November. This was a great month to market since most of the fraternities became active and opened doors to all the new students. We were engineers, not marketers — as a result, we had no idea how to sell the product. This was illustrated through our aimless walks on the Davis’s campus, selling Dojo to students who were trying to get socially involved. We would tell them that there was finally a place to post hilarious pranks and hysterical videos.&lt;/p&gt;

&lt;p&gt;No, we’re not talking about WorldStar.&lt;/p&gt;

&lt;p&gt;Dojo valued content on platforms such as WorldStar but wanted users to be protected and have access to local audiences. These type of genuine relations were unattainable on massive services like Facebook and Twitter.&lt;/p&gt;

&lt;h3 id=&quot;growth&quot;&gt;Growth&lt;/h3&gt;

&lt;p&gt;So we got our first 40 downloads after that weekend of marketing. It was an exciting time, because we only expected about 10 to 15. People weren’t excited about the application when we showed them the functionality in line — maybe because they were preoccupied by getting into a party.
Among all the communities that downloaded it, the Davis football team was the primary source of traffic. They genuinely enjoyed sharing their dorm life experiences. Whether it was the crazy highlights they recorded from Madden NFL 15 or the vine-like memoirs they captured of their personal life, there was finally a platform for them to casually post random stuff underground. Discovering genuine content based on your locality only made it sweeter.&lt;/p&gt;

&lt;p&gt;We saw similar occurrences — small groups of friends who posted to their Dojos just to have something to laugh at or scroll through when they were bored. Although this was our main source of traffic, others used the service to elevate their passion and provide an outlet to share their work. For example, local Saratoga DJ’s created “Real Dubstep Dojo” and posted hundreds of videos and pictures about their upcoming EP to fans, family and friends.&lt;/p&gt;

&lt;p&gt;Can you name another service that gives you a personal look into the process and creative-backing that goes into building a track.&lt;/p&gt;

&lt;p&gt;Apple Music? Yea — that was released after Dojo was built.&lt;/p&gt;

&lt;p&gt;Thus, we understood the model worked with passionate users that gave it a chance&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://minupalaniappan.com/assets/dojo/dojo3.jpeg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;iterations&quot;&gt;Iterations&lt;/h3&gt;

&lt;p&gt;The growth was bottle-necked after a few months of activity. We couldn’t troubleshoot specific reasons to why it failed in early Spring. We first thought that it could have been the lack of new users since the same 40 people continuously posting can be a dry experience. This was a contributing factor, but it was primarily because we stopped believing in our core mission.&lt;/p&gt;

&lt;p&gt;Instead of focusing on subtle features such as image &amp;amp; video compression or more dynamic graphics, we dedicated our time to pivoting on the overarching idea itself. We tried to hard to fit ourselves into another model. We asked ourselves, “Should we display content similar to Snapchat story? Maybe we should visualize everything on a map? Maybe we need to simplify our flow into one page.”&lt;/p&gt;

&lt;p&gt;This was our biggest problem. We aimed our faults at the larger product flaws that most of users hadn’t even thought about. By wasting time building prospective alternatives to Dojo, we didn’t have time to optimize the product on the market.&lt;/p&gt;

&lt;p&gt;This sounds stupid right? Why would you build a product and then feel the need to rebuild the whole thing?&lt;/p&gt;

&lt;p&gt;Its because everyone is ready to criticize it. They’re going to say its not simple enough or doesn’t look good. UI &amp;amp; UX issues like these will cause you to doubt the quality of the product on the market. But hearing it from not just users, but by teammates &amp;amp; friends often convinces you to re-pivot and rebuild the whole damn thing.&lt;/p&gt;

&lt;p&gt;Here is where a little stubbornness and confidence go a long way.&lt;/p&gt;

&lt;h3 id=&quot;hiring--relaunch&quot;&gt;Hiring &amp;amp; Relaunch&lt;/h3&gt;

&lt;p&gt;The product was ready to be re-launched in a more organized fashion at the beginning of spring quarter. We needed a promo-video, posters, people willing to promote the idea of local underground communities — college provided the perfect untapped source of talent. Unfortunately, finding individuals passionate about the service was near impossible.&lt;/p&gt;

&lt;p&gt;Obviously there were those ready to jump on it because they had seen the product. People were ready to jump onto a product that had a lot going for it. Dojo maintained a majority of its users, had a revamped UI and dedicated engineering talent (nearly impossible to find these days).
Everyone on the team felt good about Dojo going into the month of March. We were still losing users daily, but remained optimistic the new marketing talent we hired.&lt;/p&gt;

&lt;p&gt;But when it really came down to going out door-to-door and selling it to users, there were only a flurry of excuses.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Answer 1: “The UI isn’t clean. Its too complicated”&lt;/li&gt;
  &lt;li&gt;Answer 2: “There’s no one on it”&lt;/li&gt;
  &lt;li&gt;Answer 3: “What makes this different from Facebook, Yik-Yak or Instagram”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The same hustle we had at our first launch in Davis couldn’t be recreated by the marketing hires. The passion and ownership of the idea simply wasn’t there. This only showed us that people were willing to hop on board for the novelty of it — but when expected to work, there would be no response.
From then on, we believed that a great hire stemmed from their willingness to make time for the product and their drive to learn. For niche products such as this one, “your passion for the idea” didn’t really matter to us.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://minupalaniappan.com/assets/dojo/dojo4.jpeg&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;marketing-failure&quot;&gt;Marketing Failure&lt;/h3&gt;

&lt;p&gt;If a product was unmarketable because of its simplicity, design or uniqueness, Reddit would have difficult to market. Reddit was notorious for hosting the most horse shit on earth. Regardless of the quality of the content, people still managed to find their way back to the site because they knew they wouldn’t be bored. Their interests whether it was League of Legends, viral videos or feel-good stories, would always be satisfied. Reddit inspired the creation of the Dojo — the platform built in the Medford, MA was the first to showcase content first and UI/UX last.&lt;/p&gt;

&lt;h3 id=&quot;mission&quot;&gt;Mission&lt;/h3&gt;

&lt;p&gt;Dojo wanted to capture this environment, but on a local level. We knew this was going to be powerful if enough people were invested in the idea of an unadulterated medium.&lt;/p&gt;

&lt;p&gt;Unfortunately, for the majority of mobile users, its hard to make that leap. Being able to post content regardless of the external pressures has become harder, simply because of the environment day-to-day politics has created. Snapchat has captured this but at the sacrifice of keeping content on display forever. Sure, people like it this way — but now your memories will never be saved.&lt;/p&gt;

&lt;p&gt;For us, we wanted to find a balance. We wanted to make sure content wouldn’t be forgotten but also tried to make sure it was underground enough for only certain audiences to see. The in-ability to simulate this was one of many reasons we failed.&lt;/p&gt;

&lt;h3 id=&quot;failure--many-turns&quot;&gt;Failure @ many turns&lt;/h3&gt;

&lt;p&gt;We failed in too many ways — Dojo was the very first project that brought on many unanticipated variables. It provided us a peek into how difficult it was to satisfy a single user. For the first time in our lives, we had to not only think for ourselves but think for the rest of the world. Would users like seeing this color, that share button, or 4 separate screens? Every time we took it to the field, the number of issues would increase exponentially. It taught us everything from iterating on an idea to pitching to SV investors.&lt;/p&gt;

&lt;p&gt;Understanding how to prioritize features, bugs and design changes was the most difficult part of the product iteration aspect.&lt;/p&gt;

&lt;p&gt;This was the first of many failures that set the decline for Dojo. In addition to having no clear product vision, we were unclear about the legal roadmap that was required to protect IP and secure small rounds of Angel Funding. In hindsight, applying to small-interest accelerators (anti-YC) would have been the best decision we ever made. Product, engineering, legal and marketing development require an unparalleled amount of time. If you’re not bootstrapping your product and already have the connections to launch, you have the luxury to only focus on building what you love.&lt;/p&gt;

&lt;h3 id=&quot;community&quot;&gt;❤ community&lt;/h3&gt;

&lt;p&gt;We have decided to open source the code, graphics, videos, documents and any other IP that contributed to the creation of Dojo. We believe there is still a platform to be made. Although we will not continue working on the product, we encourage anyone and everyone to continue the mission.&lt;/p&gt;

&lt;p&gt;Fetch the source code at the top of this post.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0700</pubDate>
        <link>http://minupalaniappan.com/platforms/2016/05/29/dojo.html</link>
        <guid isPermaLink="true">http://minupalaniappan.com/platforms/2016/05/29/dojo.html</guid>
        
        
        <category>platforms</category>
        
      </item>
    
  </channel>
</rss>
